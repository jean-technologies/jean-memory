services:
  # API Service - FastAPI backend
  api:
    build: 
      context: ./api
      dockerfile: Dockerfile
    container_name: openmemory_api_service
    restart: always
    ports:
      - "8765:8765"
    environment:
      - POSTGRES_HOST=postgres_db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=jean_memory
      - POSTGRES_PASSWORD=memory_password
      - POSTGRES_DB=jean_memory_db
      - QDRANT_HOST=qdrant_db
      - QDRANT_PORT=6333
      - NEO4J_URI=bolt://neo4j_db:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=fasho93fasho
    env_file:
      - ./api/.env
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/__pycache__
    networks:
      - memory_network
    depends_on:
      postgres_db:
        condition: service_healthy
      qdrant_db:
        condition: service_healthy
      neo4j_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database - Main app database
  postgres_db:
    image: postgres:15
    container_name: openmemory_postgres_service
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=jean_memory
      - POSTGRES_PASSWORD=memory_password
      - POSTGRES_DB=jean_memory_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - memory_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jean_memory -d jean_memory_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database - Still needed as Supabase doesn't provide vector storage
  qdrant_db:
    image: qdrant/qdrant:latest
    container_name: openmemory_qdrant_service
    restart: always
    ports:
      - "6333:6333" # HTTP/REST API
      - "6334:6334" # gRPC
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - memory_network
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/6333"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Neo4j Graph Database - For unified memory system
  neo4j_db:
    image: neo4j:5
    container_name: openmemory_neo4j_service
    restart: always
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    environment:
      - NEO4J_AUTH=neo4j/fasho93fasho
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    volumes:
      - neo4j_data:/data
    networks:
      - memory_network
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p fasho93fasho 'RETURN 1' || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 12
      start_period: 40s

volumes:
  postgres_data:
  qdrant_data:
  neo4j_data:

networks:
  memory_network:
    driver: bridge
