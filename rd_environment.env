# R&D Development Environment Configuration
# This file contains the proper settings for local R&D development

# =============================================================================
# REQUIRED: Set these with your actual production credentials
# =============================================================================

# Supabase Production Access (for downloading real customer data)
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_SERVICE_KEY=your_supabase_service_key_here

# PostgreSQL Database (LOCAL) - for pgvector testing
# This is a LOCAL database for R&D testing, NOT production
PG_HOST=localhost
PG_PORT=5432
PG_USER=postgres
PG_PASSWORD=jeanmemorytypefasho
PG_DBNAME=mem0_rd_test

# OpenAI API Key (already set in your environment)
# OPENAI_API_KEY=your_openai_api_key_here

# =============================================================================
# LOCAL R&D DEVELOPMENT OVERRIDES
# =============================================================================

# Force local development mode
ENVIRONMENT=development
USE_UNIFIED_MEMORY=true

# Local Neo4j (override production)
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=fasho93fasho

# Local Qdrant (override production) - DEPRECATED, now using pgvector
QDRANT_HOST=localhost
QDRANT_PORT=6333
# Unset production Qdrant settings for local development
QDRANT_API_KEY=
MAIN_QDRANT_COLLECTION_NAME=unified_memory_mem0

# Optional: Additional API Keys
GEMINI_API_KEY=your_gemini_api_key_here
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# =============================================================================
# USAGE INSTRUCTIONS
# =============================================================================
# 1. Copy this file to .env: cp rd_environment.env .env
# 2. Set up local PostgreSQL with pgvector: python setup_local_pgvector.py
# 3. Run: python validate_pgvector_setup.py
# 4. Start R&D: python rd_development_pipeline.py --interactive 