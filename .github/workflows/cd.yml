name: Publish Python 🐍 distributions 📦 to PyPI and TestPyPI

on:
  release:
    types: [published]

jobs:
  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          cd mem0
          poetry install

      - name: Build a binary wheel and a source tarball
        run: |
          cd mem0
          poetry build

      # TODO: Needs to setup mem0 repo on Test PyPI
      # - name: Publish distribution 📦 to Test PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     repository_url: https://test.pypi.org/legacy/
      #     packages_dir: dist/

      - name: Publish distribution 📦 to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: mem0/dist/

  update-docs:
    name: Update and commit consolidated documentation
    needs: build-n-publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # We need to fetch all history and branches to be able to push
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Run doc generation script
        run: python scripts/create_consolidated_docs.py

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add docs-mintlify/assets/consolidated-docs.md
          # Commit only if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "docs: auto-generate consolidated documentation"
            git push
          else
            echo "No changes to the documentation."
          fi
